const _0x465b = ['lectures', 'availSingleSlot', 'availMultipleSlots', 'teacher', 'log', 'meetTimes', '</table>', '<tr>', '</td>', 'sch', '<center>\x20<h3>ROOM--', 'push', '</br>', 'availSingleHour', 'table', 'classess', 'course', '<td>', 'roomNames', 'name', 'break', '</h3></center>', 'pointer', 'length', '<table>', 'breakk', 'teach', 'availSingleDay', 'none', 'split', '</tr>', 'getItem', 'classes', 'avail', 'write']; (function (_0x3a66d8, _0x465b33) { const _0x50971d = function (_0x25692c) { while (--_0x25692c) { _0x3a66d8['push'](_0x3a66d8['shift']()); } }; _0x50971d(++_0x465b33); }(_0x465b, 0x159)); const _0x5097 = function (_0x3a66d8, _0x465b33) { _0x3a66d8 = _0x3a66d8 - 0x0; let _0x50971d = _0x465b[_0x3a66d8]; return _0x50971d; }; w_hours = parseInt(localStorage[_0x5097('0x1')]('w_hour')); let break_period = parseInt(localStorage[_0x5097('0x1')](_0x5097('0x1e'))) - 0x1; total_classes = 0x0, w_days = 0x5, teacher = localStorage[_0x5097('0x1')](_0x5097('0x8'))[_0x5097('0x22')](','), rooms = localStorage[_0x5097('0x1')](_0x5097('0x17'))[_0x5097('0x22')](','), courses = localStorage[_0x5097('0x1')](_0x5097('0x15')), coursesNames = courses[_0x5097('0x22')](','), m = teacher[_0x5097('0x1c')], n = rooms[_0x5097('0x1c')], k = coursesNames[_0x5097('0x1c')]; n == 0x0 && exit(0x0); let maxPeriod = break_period, maxed = w_hours - break_period - 0x1; if (maxed > maxPeriod) maxPeriod = maxed; lectures = [], lectures = localStorage[_0x5097('0x1')](_0x5097('0x5'))['split'](','); function teachers(_0x230673) { this[_0x5097('0x18')] = _0x230673, this[_0x5097('0x3')] = [[!![], !![], !![], !![], !![], !![], !![], !![]], [!![], !![], !![], !![], !![], !![], !![], !![]], [!![], !![], !![], !![], !![], !![], !![], !![]], [!![], !![], !![], !![], !![], !![], !![], !![]], [!![], !![], !![], !![], !![], !![], !![], !![]]]; } function Table() { this[_0x5097('0xe')] = new Array(w_hours); for (let _0x47c63b = 0x0; _0x47c63b < w_days; _0x47c63b++) { this['sch'][_0x47c63b] = new Array(w_days); } for (var _0x5cbca6 = 0x0; _0x5cbca6 < w_days; _0x5cbca6++)for (var _0xd98b69 = 0x0; _0xd98b69 < w_hours; _0xd98b69++) { if (_0xd98b69 != break_period) this[_0x5097('0xe')][_0x5cbca6][_0xd98b69] = _0x5097('0x21'); else this[_0x5097('0xe')][_0x5cbca6][_0xd98b69] = _0x5097('0x19'); } this[_0x5097('0x6')] = ![], this[_0x5097('0x7')] = ![], this[_0x5097('0x20')] = 0x0, this[_0x5097('0x12')] = 0x0; } tab = new Array(n); for (let index = 0x0; index < n; index++) { a = new Table(), tab[index] = a; } function set(_0x422806, _0x59627a, _0x12d6f4, _0x42100e) { tab[_0x422806][_0x5097('0xe')][_0x59627a][_0x12d6f4] = _0x42100e; } function availSingle(_0x4113fe, _0x1c9768, _0xe3c4e) { tab[_0x4113fe][_0x5097('0x20')] = _0x1c9768, tab[_0x4113fe][_0x5097('0x12')] = _0xe3c4e; } function ifAvailSingle(_0x3c18b0) { return tab[_0x3c18b0][_0x5097('0x6')]; } function setSingle(_0x40b392) { tab[_0x40b392][_0x5097('0x6')] = !![]; } function desetSingle(_0xf16b01) { tab[_0xf16b01][_0x5097('0x6')] = ![]; } function getSingleDay(_0x2d65bb) { return tab[_0x2d65bb]['availSingleDay']; } function getSingleHour(_0x5ecc95) { return tab[_0x5ecc95][_0x5097('0x12')]; } t = [], c = 0x0; while (c < m) { a = new teachers(teacher[c]), t[_0x5097('0x10')](a), c++; } function getTeacherInd(_0x265409) { tr = 0x0; while (_0x265409 != t[tr][_0x5097('0x18')]) tr++; return tr; } function getCreditHour(_0x369519) { courses[_0x369519][_0x5097('0x5')]--; } function course(_0x5dacb0, _0x3d0802, _0x10d594) { this[_0x5097('0x18')] = _0x5dacb0, this[_0x5097('0x1f')] = _0x3d0802, this[_0x5097('0x2')] = _0x10d594, this[_0x5097('0xa')] = 0x0, this[_0x5097('0x1b')] = 0x0, this['lectures'] = 0x0, this[_0x5097('0x14')] = []; } c = 0x0, courses = []; while (c < k) { a = new course(coursesNames[c], teacher[c], lectures[c]), aa = lectures[c][_0x5097('0x1c')]; for (let index = 0x0; index < aa; index += 0x2) { a[_0x5097('0xa')] += parseInt(a[_0x5097('0x2')][index]), a[_0x5097('0x14')][_0x5097('0x10')](parseInt(a[_0x5097('0x2')][index])), a[_0x5097('0x5')]++; } courses[_0x5097('0x10')](a), total_classes += a[_0x5097('0xa')], c++; } schedule = new Array(w_days); for (let index = 0x0; index < w_days; index++) { schedule[index] = new Array(w_hours); } function validateExit() { flag = !![]; for (i = 0x0; i < k; i++)courses[i]['pointer'] < courses[i][_0x5097('0x5')] && (flag = ![]); return flag; } function getCreditHour(_0x8f442f) { return courses[_0x8f442f][_0x5097('0x1b')] < courses[_0x8f442f][_0x5097('0x5')] ? courses[_0x8f442f][_0x5097('0x14')][courses[_0x8f442f][_0x5097('0x1b')]++] : 0x0; } function ifAvail(_0x687719, _0x178096, _0x1fe334, _0x452a33) { for (let _0x4fac81 = 0x0; _0x4fac81 < _0x452a33; _0x4fac81++) { if (t[_0x687719][_0x5097('0x3')][_0x178096][_0x1fe334 + _0x4fac81] == ![]) return ![]; } return !![]; } let allocated = 0x0; function init() { for (var _0x531520 = 0x0; _0x531520 < w_days; _0x531520++)for (var _0x427c52 = 0x0; _0x427c52 < w_hours; _0x427c52++) { if (_0x427c52 != break_period) schedule[_0x531520][_0x427c52] = _0x5097('0x21'); else schedule[_0x531520][_0x427c52] = _0x5097('0x19'); } } function show(_0x28a0a7, _0x24d334) { let _0x31eba1 = ''; _0x31eba1 += '<tr><th>8-9</th><th>9-10</th><th>10-11</th><th>11-12</th><th>12-1</th><th>1-2</th><th>2-3</th><th>3-4</th></tr\x20>'; for (let _0x3704ff = 0x0; _0x3704ff < w_days; _0x3704ff++) { _0x31eba1 += _0x5097('0xc'); for (let _0x1c47bc = 0x0; _0x1c47bc < w_hours; _0x1c47bc++) { _0x31eba1 += _0x5097('0x16') + tab[_0x28a0a7]['sch'][_0x3704ff][_0x1c47bc] + _0x5097('0xd'); } _0x31eba1 += _0x5097('0x0'); } document['write'](_0x5097('0x11')), document[_0x5097('0x4')](_0x5097('0xf') + rooms[_0x24d334] + _0x5097('0x1a')), document[_0x5097('0x4')](_0x5097('0x11')), document[_0x5097('0x4')](_0x5097('0x1d') + _0x31eba1 + _0x5097('0xb')), document['write'](_0x5097('0x11')), document[_0x5097('0x4')](_0x5097('0x11')), document[_0x5097('0x4')](_0x5097('0x11')), _0x31eba1 = ''; } function generate() { t_name = '', c_name = ''; let _0xf77e98 = 0x0, _0x5788c7 = 0x0, _0x92443f = 0x0, _0x81b26f = 0x0, _0x5c75dc = !![], _0xa6cb6a = total_classes, _0x385eaf = 0x0, _0x4db58c = 0x0, _0x430a1a = !![], _0x2977de = [0x0, 0x0, 0x0], _0x3b30d3 = 0x0, _0x55faa2 = 0x0, _0x305e30 = ![], _0x325538 = [0x0, 0x0], _0x32c532 = ![], _0x8cd2d9 = 0x0, _0x2ac4f9 = !![]; if (total_classes == 0x0) return; init(); while (!![]) { for (_0x385eaf = 0x0; _0x385eaf < w_hours; _0x385eaf++) { if (_0x385eaf == break_period) continue; _0x2ac4f9 = !![]; if (_0x5c75dc == !![]) { _0x32c532 = !![], _0x81b26f = getCreditHour(_0xf77e98); _0x81b26f == 0x0 && _0xa6cb6a--; if (_0x81b26f > 0x0 && _0x2977de[0x0] == _0x81b26f && ifAvail(_0x5788c7, _0x2977de[0x1], _0x2977de[0x2], _0x81b26f) == !![] && schedule[_0x2977de[0x1]][_0x2977de[0x2]] == _0x5097('0x21')) { c_name = courses[_0xf77e98][_0x5097('0x18')], t_name = courses[_0xf77e98][_0x5097('0x1f')], _0x5788c7 = getTeacherInd(t_name), t_name = t[_0x5788c7][_0x5097('0x18')]; let _0x4bea7d = _0x2977de[0x2]; while (_0x81b26f > 0x0) { schedule[_0x2977de[0x1]][_0x4bea7d] = courses[_0xf77e98][_0x5097('0x18')], set(_0x8cd2d9, _0x2977de[0x1], _0x4bea7d, c_name), t[_0x5788c7][_0x5097('0x3')][_0x2977de[0x1]][_0x4bea7d] = ![], allocated++, _0x4bea7d++, _0xa6cb6a--, _0x81b26f--; } _0x2977de[0x0] = 0x0, _0x2977de[0x1] = 0x0, _0x2977de[0x2] = 0x0, _0x430a1a = !![], _0x3b30d3 = 0x0, _0x2ac4f9 = ![]; } if (_0x2ac4f9 == !![]) { _0x5c75dc = ![]; if (_0x81b26f == 0x1 && _0x8cd2d9 > 0x0 && ifAvailSingle(_0x8cd2d9 - 0x1)) { c_name = courses[_0xf77e98][_0x5097('0x18')], t_name = courses[_0xf77e98][_0x5097('0x1f')], _0x5788c7 = getTeacherInd(t_name), t_name = t[_0x5788c7][_0x5097('0x18')]; let _0x452687 = getSingleDay(_0x8cd2d9 - 0x1), _0x20b8bd = getSingleHour(_0x8cd2d9 - 0x1); if (ifAvail(_0x5788c7, _0x452687, _0x20b8bd, _0x81b26f)) set(_0x8cd2d9 - 0x1, _0x452687, _0x20b8bd, c_name), desetSingle(_0x8cd2d9 - 0x1), t[_0x5788c7]['avail'][_0x452687][_0x20b8bd] = ![], _0xa6cb6a--, allocated++, _0x81b26f--; else _0x305e30 = !![]; } _0x81b26f == 0x1 && (_0x305e30 = !![]); } } if (_0x2ac4f9 == !![]) { _0x2ac4f9 = ![]; if (_0x385eaf < break_period && _0x81b26f + _0x385eaf > break_period) { 0x4 - _0x385eaf == 0x1 && (_0x325538[0x0] = _0x92443f, _0x325538[0x1] = _0x385eaf); _0x32c532 = !![]; continue; } if (_0x385eaf + _0x81b26f > w_hours && _0x92443f == w_days - 0x1) { courses[_0xf77e98][_0x5097('0x1b')]--; if (_0xf77e98 < k - 0x1) _0xf77e98++; else _0xf77e98 == k - 0x1 && (_0xf77e98 = 0x0); _0x5c75dc = !![], _0x385eaf--; continue; } if (_0x385eaf + _0x81b26f > w_hours) { (_0x430a1a == !![] || schedule[_0x2977de[0x1]][_0x2977de[0x2]] != _0x5097('0x21')) && (_0x2977de[0x0] = w_hours - _0x385eaf, _0x2977de[0x1] = _0x92443f, _0x2977de[0x2] = _0x385eaf); _0x430a1a = ![], _0x32c532 = !![]; continue; } c_name = courses[_0xf77e98][_0x5097('0x18')], t_name = courses[_0xf77e98]['teach'], _0x5788c7 = getTeacherInd(t_name), t_name = t[_0x5788c7][_0x5097('0x18')]; if (_0x305e30 == !![] && _0x81b26f == 0x1) for (let _0x2cc7d7 = 0x0; _0x2cc7d7 <= _0x92443f; _0x2cc7d7++)for (let _0x46945e = 0x0; _0x46945e < w_hours; _0x46945e++) { if (_0x2cc7d7 == _0x92443f && _0x46945e == _0x385eaf) { _0x46945e = 0x14, _0x2cc7d7 = 0x14; continue; } schedule[_0x2cc7d7][_0x46945e] == 'none' && (schedule[_0x2cc7d7][_0x46945e - 0x1] != _0x5097('0x21') || schedule[_0x2cc7d7][_0x46945e + 0x1] != _0x5097('0x21') || schedule[_0x325538[0x0]][_0x325538[0x1]] != _0x5097('0x21')) && (_0x325538[0x0] = _0x2cc7d7, _0x325538[0x1] = _0x46945e); } _0x32c532 == !![] && _0x305e30 == !![] && _0x325538[0x1] > 0x0 && c_name != schedule[_0x325538[0x0]][_0x325538[0x1] - 0x1] && _0x81b26f == 0x1 && schedule[_0x325538[0x0]][_0x325538[0x1]] == _0x5097('0x21') && (schedule[_0x325538[0x0]][_0x325538[0x1]] = courses[_0xf77e98]['name'], set(_0x8cd2d9, _0x325538[0x0], _0x325538[0x1], c_name), allocated++, t[_0x5788c7][_0x5097('0x3')][_0x325538[0x0]][_0x325538[0x1]] = ![], _0xa6cb6a--, _0x81b26f--, _0x305e30 = ![], _0x325538[0x0] = 0x0, _0x325538[0x1] = 0x0); } _0x2ac4f9 = !![]; if (_0x81b26f > 0x0 && ifAvail(_0x5788c7, _0x92443f, _0x385eaf, _0x81b26f) == !![]) { _0x32c532 = ![], schedule[_0x92443f][_0x385eaf] = courses[_0xf77e98][_0x5097('0x18')], set(_0x8cd2d9, _0x92443f, _0x385eaf, c_name), t[_0x5788c7]['avail'][_0x92443f][_0x385eaf] = ![], _0x81b26f--, _0xa6cb6a--, allocated++; continue; } else { if (_0x81b26f > 0x0 && !ifAvail(_0x5788c7, _0x92443f, _0x385eaf, _0x81b26f)) { courses[_0xf77e98][_0x5097('0x1b')]--; if (_0xf77e98 < k - 0x1) _0xf77e98++; else _0xf77e98 == k - 0x1 && (_0xf77e98 = 0x0); _0x5c75dc = !![], _0x385eaf--; continue; } else { if (_0xa6cb6a <= 0x0) { if (_0x55faa2 >= n) { show(_0x8cd2d9, _0x55faa2++), console[_0x5097('0x13')](schedule); return; } if (validateExit()) { console[_0x5097('0x13')](schedule), console[_0x5097('0x9')](allocated), show(_0x8cd2d9, _0x55faa2++); return; } else { _0xa6cb6a = _0xa6cb6a + k, _0x385eaf--; continue; } } else { if (_0x81b26f > 0x0 && courses[_0xf77e98][_0x5097('0x1b')] == courses[_0xf77e98][_0x5097('0x5')]) _0xa6cb6a = _0xa6cb6a + k; else { if (_0xf77e98 < k - 0x1) _0xf77e98++; else _0xf77e98 == k - 0x1 && (_0xf77e98 = 0x0); } _0x5c75dc = !![], _0x385eaf--; } } } } if (_0x92443f == w_days - 0x1) { if (_0x55faa2 == n) { console[_0x5097('0x13')](schedule), show(_0x8cd2d9, _0x55faa2++); return; } console[_0x5097('0x13')](schedule), show(_0x8cd2d9, _0x55faa2++), _0x92443f = 0x0, _0x385eaf = 0x0, schedule[_0x325538[0x0]][_0x325538[0x1]] == 'none' && (availSingle(_0x8cd2d9, _0x325538[0x0], _0x325538[0x1]), setSingle(_0x8cd2d9)), _0x325538[0x0] = 0x0, _0x325538[0x1] = 0x0, _0x2977de[0x0] = 0x0, _0x2977de[0x1] = 0x0, _0x2977de[0x2] = 0x0, _0x8cd2d9++, init(); } else _0x92443f++; } }
